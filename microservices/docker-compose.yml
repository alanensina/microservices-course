version: '3.8'

services:
  product-service:
    image: mongo:6-jammy
    container_name: product-service
    ports:
      - '27017:27017'
    volumes:
      - dbdata6:/data/db
    networks:
      - product-network

  order-service:
    image: mysql:8.0.33-debian
    container_name: order-service
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysecretpassword
      MYSQL_DATABASE: order-service
    ports:
      - '3306:3306'
    networks:
      - order-network

  inventory-service:
    image: mysql:8.0.33-debian
    container_name: inventory-service
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysecretpassword
      MYSQL_DATABASE: inventory-service
    ports:
      - '3307:3306'
    networks:
      - inventory-network

  keycloak:
    image: quay.io/keycloak/keycloak:18.0.0
    container_name: keycloak
    ports:
      - '8181:8080'
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: start-dev
    networks:
      - keycloak-network

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - '9411:9411'
    networks:
      - zipkin-network

  zookeeper:
    image: zookeeper:3.7.1
    container_name: zookeeper
    ports:
      - '2181:2181'
    networks:
      - app

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app

volumes:
  dbdata6:

networks:
  product-network:
  order-network:
  inventory-network:
  keycloak-network:
  zipkin-network:
  app:
